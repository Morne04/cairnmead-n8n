{"id":"zVdHdOTaJcDQ9Rdp","createdAt":"2023-08-08T19:19:44.204Z","updatedAt":"2023-08-10T08:57:45.000Z","name":"Email Escalations Logic","active":true,"nodes":[{"parameters":{"operation":"executeQuery","query":"SELECT \n    SN.SiteNoticeID,\n    SN.Issued_To,\n    SN.Issue_To_Email,\n    SN.Created,\n    SN.CreatedBy,\n    SN.Open_Days,\n    SN.Status,\n    SN.Project_ID,\n    SNI.Notice_ID,\n    SNI.Site_Notice_ID,\n    SNI.Sign_Off_Status,\n    SNI.List_ID\nFROM \n    Site_Notices AS SN\nJOIN \n    Site_Notice_Items AS SNI\nON \n    SN.SiteNoticeID = SNI.Site_Notice_ID\nWHERE \n    SN.Status <> 3\nAND\n    SNI.Sign_Off_Status <> 3;\n"},"id":"603af21a-008d-416f-b741-6d62e07f3043","name":"Get Data from MSSQL","type":"n8n-nodes-base.microsoftSql","typeVersion":1,"position":[-1580,780],"credentials":{"microsoftSql":{"id":"etPCn0IwBmfLLPlf","name":"Cairnmead MSSQL"}}},{"parameters":{"conditions":{"number":[{"value1":"={{ $json.Open_Days }}","operation":"equal","value2":3}]}},"id":"c16eda63-6ccf-4819-8eee-b3e459cf9c93","name":"Check If 3 Days Old","type":"n8n-nodes-base.if","typeVersion":1,"position":[-1380,780]},{"parameters":{"jsCode":"let grouped = {};\nlet details = {};\n\nfor (let item of items) {\n    let noticeID = item.json[\"Site_Notice_ID\"];\n    noticeID = noticeID.replace(/\\s/g, '');  // Remove all white spaces\n\n    const noticeDetail = item.json[\"Notice_ID\"];\n    const projectId = item.json[\"Project_ID\"];\n    const issuedTo = item.json[\"Issued_To\"];\n    const issueToEmail = item.json[\"Issue_To_Email\"];\n    const created = item.json[\"Created\"];\n    const createdBy = item.json[\"CreatedBy\"];\n    const openDays = item.json[\"Open_Days\"];\n    const status = item.json[\"Status\"];\n    const signOffStatus = item.json[\"Sign_Off_Status\"];\n    const listId = item.json[\"List_ID\"];\n\n    if (grouped[noticeID]) {\n        grouped[noticeID].push(noticeDetail);\n    } else {\n        grouped[noticeID] = [noticeDetail];\n        details[noticeID] = {projectId, issuedTo, issueToEmail, created, createdBy, openDays, status, signOffStatus, listId};\n    }\n}\n\nreturn Object.keys(grouped).map(noticeID => {\n    const links = grouped[noticeID].map(id => \n      `<a href=\"https://cairnmead.org/site-notice?nid=${id}&snid=${noticeID}&pid=${details[noticeID].projectId}&list=${details[noticeID].listId}\">Notice Item: ${id}</a>`\n    );\n    \n    return {\n        json: {\n            \"Site_Notice_ID\": noticeID,\n            \"Notice_Links\": links.join('<br>'), // joining the links with a line break\n            ...details[noticeID]\n        }\n    };\n});\n"},"id":"33e6fe76-3817-4e7a-b7f9-b92754f4dd01","name":"Code","type":"n8n-nodes-base.code","typeVersion":1,"position":[-1180,700]},{"parameters":{"conditions":{"number":[{"value1":"={{ $json.Open_Days }}","operation":"equal","value2":5}]}},"id":"f7d51495-db44-4acd-9f87-d0491cc13dd7","name":"Check If 5 Days Old","type":"n8n-nodes-base.if","typeVersion":1,"position":[-1180,920]},{"parameters":{"conditions":{"number":[{"value1":"={{ $json.Open_Days }}","operation":"equal","value2":9}]}},"id":"5117e3ff-c2af-40c6-aaa1-50c7ec950f76","name":"Check If 9 Days Old","type":"n8n-nodes-base.if","typeVersion":1,"position":[-1000,1120]},{"parameters":{"jsCode":"let grouped = {};\nlet details = {};\n\nfor (let item of items) {\n    const noticeID = item.json[\"Site_Notice_ID\"];\n    const noticeDetail = item.json[\"Notice_ID\"];\n    const projectId = item.json[\"Project_ID\"];\n    const issuedTo = item.json[\"Issued_To\"];\n    const issueToEmail = item.json[\"Issue_To_Email\"];\n    const created = item.json[\"Created\"];\n    const createdBy = item.json[\"CreatedBy\"];\n    const openDays = item.json[\"Open_Days\"];\n    const status = item.json[\"Status\"];\n    const signOffStatus = item.json[\"Sign_Off_Status\"];\n    const listId = item.json[\"List_ID\"];\n\n    if (grouped[noticeID]) {\n        grouped[noticeID].push(noticeDetail);\n    } else {\n        grouped[noticeID] = [noticeDetail];\n        details[noticeID] = {projectId, issuedTo, issueToEmail, created, createdBy, openDays, status, signOffStatus, listId};\n    }\n}\n\nreturn Object.keys(grouped).map(noticeID => {\n    const links = grouped[noticeID].map(id => \n      `<a href=\"https://cairnmead.org/site-notice?nid=${id}&snid=${noticeID}&pid=${details[noticeID].projectId}&list=${details[noticeID].listId}\">Notice Item: ${id}</a>`\n    );\n    \n    return {\n        json: {\n            \"Site_Notice_ID\": noticeID,\n            \"Notice_Links\": links.join('<br>'), // joining the links with a line break\n            ...details[noticeID]\n        }\n    };\n});\n"},"id":"761c2653-2db4-4bf9-811d-92bf4d2ae8bb","name":"Code3","type":"n8n-nodes-base.code","typeVersion":1,"position":[-640,1300]},{"parameters":{"conditions":{"number":[{"value1":"={{ $json.Open_Days }}","operation":"largerEqual","value2":10}]}},"id":"291b071b-31b1-47e3-aeea-444ab50a75e2","name":"Check If > 10 Days Old","type":"n8n-nodes-base.if","typeVersion":1,"position":[-820,1320]},{"parameters":{"operation":"executeQuery","query":"SELECT er.*, pl1.First_Name, pl1.Last_Name, pl1.EmailAddress AS Receiver_Email, p.Project_Name, pl2.EmailAddress AS Created_Person_Email\nFROM escalationReceivers er\nJOIN Site_Notices sn ON er.ownedSnid = sn.SiteNoticeID\nJOIN People_List pl1 ON er.ownedPerson = pl1.Person_ID\nJOIN Projects p ON sn.Project_ID = p.Project_ID\nJOIN People_List pl2 ON sn.Created_PersonID = pl2.Person_ID\nWHERE er.ownedSnid = {{ $input.first().json.Site_Notice_ID }} AND er.[5days] = 1;\n"},"id":"0ad20eac-7af5-4a78-981b-09ad2e5c9d6f","name":"Microsoft SQL","type":"n8n-nodes-base.microsoftSql","typeVersion":1,"position":[-820,900],"credentials":{"microsoftSql":{"id":"etPCn0IwBmfLLPlf","name":"Cairnmead MSSQL"}}},{"parameters":{"operation":"executeQuery","query":"SELECT er.*, pl1.First_Name, pl1.Last_Name, pl1.EmailAddress AS Receiver_Email, p.Project_Name, pl2.EmailAddress AS Created_Person_Email\nFROM escalationReceivers er\nJOIN Site_Notices sn ON er.ownedSnid = sn.SiteNoticeID\nJOIN People_List pl1 ON er.ownedPerson = pl1.Person_ID\nJOIN Projects p ON sn.Project_ID = p.Project_ID\nJOIN People_List pl2 ON sn.Created_PersonID = pl2.Person_ID\nWHERE er.ownedSnid = {{ $input.first().json.Site_Notice_ID }} AND er.[9days] = 1;\n"},"id":"8b39738a-37da-478f-9408-1d71de2f2623","name":"Microsoft SQL1","type":"n8n-nodes-base.microsoftSql","typeVersion":1,"position":[-640,1100],"credentials":{"microsoftSql":{"id":"etPCn0IwBmfLLPlf","name":"Cairnmead MSSQL"}}},{"parameters":{"operation":"executeQuery","query":"SELECT er.*, pl1.First_Name, pl1.Last_Name, pl1.EmailAddress AS Receiver_Email, p.Project_Name, pl2.EmailAddress AS Created_Person_Email\nFROM escalationReceivers er\nJOIN Site_Notices sn ON er.ownedSnid = sn.SiteNoticeID\nJOIN People_List pl1 ON er.ownedPerson = pl1.Person_ID\nJOIN Projects p ON sn.Project_ID = p.Project_ID\nJOIN People_List pl2 ON sn.Created_PersonID = pl2.Person_ID\nWHERE er.ownedSnid = {{ $input.first().json.Site_Notice_ID }} AND er.[10days] = 1;\n"},"id":"8b344a96-dcda-49d5-940e-36572e8275e2","name":"Microsoft SQL2","type":"n8n-nodes-base.microsoftSql","typeVersion":1,"position":[-460,1300],"credentials":{"microsoftSql":{"id":"etPCn0IwBmfLLPlf","name":"Cairnmead MSSQL"}}},{"parameters":{"subject":"=Cairnmead Safety Inspection {{ $json[\"ownedSnid\"] }}: FIRST Reminder: Pending Corrective Action Required","bodyContent":"=<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Email Reminder</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.5;\n            margin: 20px;\n        }\n        a {\n            color: #007BFF;\n            text-decoration: none;\n        }\n    </style>\n</head>\n<body>\n    <p>Dear {{ $json[\"issuedToName\"] }},</p>\n    <p>We are writing to provide a reminder regarding the pending corrective action report for the Safety Inspection that was done on {{ $json[\"createdDate\"] }} that needs to be completed for the {{ $json[\"projectName\"] }} construction project. The three working days to provide a full close out has lapsed without the close out being received.</p>\n    <p>After 5 days without close-out, a further mail will be sent to you and include the client professional team.</p>\n    <p>To view the outstanding notices, click on this link:<br>\n    {{ $json[\"nidLinks\"] }}</p>\n    <p>Best Regards,</p>\n</body>\n</html>\n","toRecipients":"={{ $('Code4').first().json[\"issuedToEmail\"] }}","additionalFields":{"bodyContentType":"html","ccRecipients":"={{ $('Code4').first().json[\"ccRecipients\"] }}","from":"={{ $('Code4').first().json[\"consultantEmail\"] }}","saveToSentItems":false}},"id":"1b01c47b-c163-468a-a329-0ddeb329fa32","name":"Microsoft Outlook","type":"n8n-nodes-base.microsoftOutlook","typeVersion":1,"position":[-280,680],"credentials":{"microsoftOutlookOAuth2Api":{"id":"NJJeBueG4FfX6Tf4","name":"Cairnmead Outlook"}}},{"parameters":{"operation":"executeQuery","query":"SELECT er.*, pl1.First_Name, pl1.Last_Name, pl1.EmailAddress AS Receiver_Email, p.Project_Name, pl2.EmailAddress AS Created_Person_Email\nFROM escalationReceivers er\nJOIN Site_Notices sn ON er.ownedSnid = sn.SiteNoticeID\nJOIN People_List pl1 ON er.ownedPerson = pl1.Person_ID\nJOIN Projects p ON sn.Project_ID = p.Project_ID\nJOIN People_List pl2 ON sn.Created_PersonID = pl2.Person_ID\nWHERE er.ownedSnid = {{ $input.first().json.Site_Notice_ID }} AND er.[3days] = 1;\n"},"id":"5c6ef429-89ad-4dea-b421-f710730b7b7f","name":"Retrieve CC Recipients","type":"n8n-nodes-base.microsoftSql","typeVersion":1,"position":[-1000,700],"credentials":{"microsoftSql":{"id":"etPCn0IwBmfLLPlf","name":"Cairnmead MSSQL"}}},{"parameters":{"keepOnlySet":true,"values":{"string":[{"name":"ccRecipients","value":"={{ $json.Receiver_Email }}"},{"name":"issuedToName","value":"={{ $('Code').item.json.issuedTo }}"},{"name":"issuedToEmail","value":"={{ $('Code').item.json.issueToEmail }}"},{"name":"createdDate","value":"={{ $json.created_at }}"},{"name":"projectName","value":"={{ $json.Project_Name }}"},{"name":"nidLinks","value":"={{ $('Code').item.json.Notice_Links }}"},{"name":"consultantName","value":"={{ $('Code').item.json.createdBy }}"},{"name":"consultantEmail","value":"={{ $json.Created_Person_Email }}"}],"number":[{"name":"ownedSnid","value":"={{ $json.ownedSnid }}"}]},"options":{}},"id":"55ff6d40-f07b-46c6-a3fa-1f457780d4ee","name":"Set","type":"n8n-nodes-base.set","typeVersion":2,"position":[-820,700]},{"parameters":{"jsCode":"// Initialize an array to store all the \"ccRecipients\"\nconst ccRecipientsArray = [];\n\n// Iterate through the items and collect all the \"ccRecipients\"\nfor (const item of items) {\n  ccRecipientsArray.push(item.json.ccRecipients);\n}\n\n// Concatenate the \"ccRecipients\" into a comma-separated string\nconst ccRecipientsString = ccRecipientsArray.join(',');\n\n// Parse and format the \"createdDate\"\nconst createdDateObj = new Date(items[0].json.createdDate);\nconst createdDateFormatted = `${createdDateObj.getDate()} ${createdDateObj.toLocaleString('en-US', { month: 'short' })} ${createdDateObj.getFullYear()}`;\n\n// Construct the final object using the properties from the first item\nconst finalObject = {\n  ownedSnid: items[0].json.ownedSnid,\n  ccRecipients: ccRecipientsString,\n  issuedToName: items[0].json.issuedToName,\n  issuedToEmail: items[0].json.issuedToEmail,\n  createdDate: createdDateFormatted,\n  projectName: items[0].json.projectName,\n  nidLinks: items[0].json.nidLinks,\n  consultantName: items[0].json.consultantName,\n  consultantEmail: items[0].json.consultantEmail\n};\n\n// Return the final object as a single item\nreturn [\n  { json: finalObject }\n];\n"},"id":"e3afaf95-3404-4397-bde2-1485bd4938aa","name":"Code4","type":"n8n-nodes-base.code","typeVersion":1,"position":[-640,700]},{"parameters":{"jsCode":"let grouped = {};\nlet details = {};\n\nfor (let item of items) {\n    const noticeID = item.json[\"Site_Notice_ID\"];\n    const noticeDetail = item.json[\"Notice_ID\"];\n    const projectId = item.json[\"Project_ID\"];\n    const issuedTo = item.json[\"Issued_To\"];\n    const issueToEmail = item.json[\"Issue_To_Email\"];\n    const created = item.json[\"Created\"];\n    const createdBy = item.json[\"CreatedBy\"];\n    const openDays = item.json[\"Open_Days\"];\n    const status = item.json[\"Status\"];\n    const signOffStatus = item.json[\"Sign_Off_Status\"];\n    const listId = item.json[\"List_ID\"];\n\n    if (grouped[noticeID]) {\n        grouped[noticeID].push(noticeDetail);\n    } else {\n        grouped[noticeID] = [noticeDetail];\n        details[noticeID] = {projectId, issuedTo, issueToEmail, created, createdBy, openDays, status, signOffStatus, listId};\n    }\n}\n\nreturn Object.keys(grouped).map(noticeID => {\n    const links = grouped[noticeID].map(id => \n      `<a href=\"https://cairnmead.org/site-notice?nid=${id}&snid=${noticeID}&pid=${details[noticeID].projectId}&list=${details[noticeID].listId}\">Notice Item: ${id}</a>`\n    );\n    \n    return {\n        json: {\n            \"Site_Notice_ID\": noticeID,\n            \"Notice_Links\": links.join('<br>'), // joining the links with a line break\n            ...details[noticeID]\n        }\n    };\n});\n"},"id":"fe803df6-ff7c-4698-921b-db7fe53c1b9a","name":"Code2","type":"n8n-nodes-base.code","typeVersion":1,"position":[-820,1100]},{"parameters":{"jsCode":"let grouped = {};\nlet details = {};\n\nfor (let item of items) {\n    let noticeID = item.json[\"Site_Notice_ID\"];\n    noticeID = noticeID.replace(/\\s/g, '');  // Remove all white spaces\n\n    const noticeDetail = item.json[\"Notice_ID\"];\n    const projectId = item.json[\"Project_ID\"];\n    const issuedTo = item.json[\"Issued_To\"];\n    const issueToEmail = item.json[\"Issue_To_Email\"];\n    const created = item.json[\"Created\"];\n    const createdBy = item.json[\"CreatedBy\"];\n    const openDays = item.json[\"Open_Days\"];\n    const status = item.json[\"Status\"];\n    const signOffStatus = item.json[\"Sign_Off_Status\"];\n    const listId = item.json[\"List_ID\"];\n\n    if (grouped[noticeID]) {\n        grouped[noticeID].push(noticeDetail);\n    } else {\n        grouped[noticeID] = [noticeDetail];\n        details[noticeID] = {projectId, issuedTo, issueToEmail, created, createdBy, openDays, status, signOffStatus, listId};\n    }\n}\n\nreturn Object.keys(grouped).map(noticeID => {\n    const links = grouped[noticeID].map(id => \n      `<a href=\"https://cairnmead.org/site-notice?nid=${id}&snid=${noticeID}&pid=${details[noticeID].projectId}&list=${details[noticeID].listId}\">Notice Item: ${id}</a>`\n    );\n    \n    return {\n        json: {\n            \"Site_Notice_ID\": noticeID,\n            \"Notice_Links\": links.join('<br>'), // joining the links with a line break\n            ...details[noticeID]\n        }\n    };\n});\n"},"id":"a14fa7eb-b495-4b46-80ed-cc9a6c8f9e9b","name":"Code1","type":"n8n-nodes-base.code","typeVersion":1,"position":[-1000,900]},{"parameters":{"keepOnlySet":true,"values":{"string":[{"name":"ccRecipients","value":"={{ $json.Receiver_Email }}"},{"name":"issuedToName","value":"={{ $('Code1').item.json.issuedTo }}"},{"name":"issuedToEmail","value":"={{ $('Code1').item.json.issueToEmail }}"},{"name":"createdDate","value":"={{ $json.created_at }}"},{"name":"projectName","value":"={{ $json.Project_Name }}"},{"name":"nidLinks","value":"={{ $('Code1').item.json.Notice_Links }}"},{"name":"consultantName","value":"={{ $('Code1').item.json.createdBy }}"},{"name":"consultantEmail","value":"={{ $json.Created_Person_Email }}"}],"number":[{"name":"ownedSnid","value":"={{ $json.ownedSnid }}"}]},"options":{}},"id":"37a50aa7-7730-491b-a087-28609f61b622","name":"Set1","type":"n8n-nodes-base.set","typeVersion":2,"position":[-640,900]},{"parameters":{"keepOnlySet":true,"values":{"string":[{"name":"ccRecipients","value":"={{ $json.Receiver_Email }}"},{"name":"issuedToName","value":"={{ $('Code2').item.json.issuedTo }}"},{"name":"issuedToEmail","value":"={{ $('Code2').item.json.issueToEmail }}"},{"name":"createdDate","value":"={{ $json.created_at }}"},{"name":"projectName","value":"={{ $json.Project_Name }}"},{"name":"nidLinks","value":"={{ $('Code2').item.json.Notice_Links }}"},{"name":"consultantName","value":"={{ $('Code2').item.json.createdBy }}"},{"name":"consultantEmail","value":"={{ $json.Created_Person_Email }}"}],"number":[{"name":"ownedSnid","value":"={{ $json.ownedSnid }}"}]},"options":{}},"id":"adfcef4a-a392-48e2-bcc2-2946f0797448","name":"Set2","type":"n8n-nodes-base.set","typeVersion":2,"position":[-460,1100]},{"parameters":{"keepOnlySet":true,"values":{"string":[{"name":"ccRecipients","value":"={{ $json.Receiver_Email }}"},{"name":"issuedToName","value":"={{ $('Code3').item.json.issuedTo }}"},{"name":"issuedToEmail","value":"={{ $('Code3').item.json.issueToEmail }}"},{"name":"createdDate","value":"={{ $json.created_at }}"},{"name":"projectName","value":"={{ $json.Project_Name }}"},{"name":"nidLinks","value":"={{ $('Code3').item.json.Notice_Links }}"},{"name":"consultantName","value":"={{ $('Code3').item.json.createdBy }}"},{"name":"consultantEmail","value":"={{ $json.Created_Person_Email }}"}],"number":[{"name":"ownedSnid","value":"={{ $json.ownedSnid }}"}]},"options":{}},"id":"28f60c7b-09f4-4b78-adb7-d76259146733","name":"Set3","type":"n8n-nodes-base.set","typeVersion":2,"position":[-280,1300]},{"parameters":{"jsCode":"// Initialize an array to store all the \"ccRecipients\"\nconst ccRecipientsArray = [];\n\n// Iterate through the items and collect all the \"ccRecipients\"\nfor (const item of items) {\n  ccRecipientsArray.push(item.json.ccRecipients);\n}\n\n// Concatenate the \"ccRecipients\" into a comma-separated string\nconst ccRecipientsString = ccRecipientsArray.join(',');\n\n// Parse and format the \"createdDate\"\nconst createdDateObj = new Date(items[0].json.createdDate);\nconst createdDateFormatted = `${createdDateObj.getDate()} ${createdDateObj.toLocaleString('en-US', { month: 'short' })} ${createdDateObj.getFullYear()}`;\n\n// Construct the final object using the properties from the first item\nconst finalObject = {\n  ownedSnid: items[0].json.ownedSnid,\n  ccRecipients: ccRecipientsString,\n  issuedToName: items[0].json.issuedToName,\n  issuedToEmail: items[0].json.issuedToEmail,\n  createdDate: createdDateFormatted,\n  projectName: items[0].json.projectName,\n  nidLinks: items[0].json.nidLinks,\n  consultantName: items[0].json.consultantName,\n  consultantEmail: items[0].json.consultantEmail\n};\n\n// Return the final object as a single item\nreturn [\n  { json: finalObject }\n];\n"},"id":"c00f23b2-0792-4a4c-a9fd-8763921f8f90","name":"Code5","type":"n8n-nodes-base.code","typeVersion":1,"position":[-460,900]},{"parameters":{"jsCode":"// Initialize an array to store all the \"ccRecipients\"\nconst ccRecipientsArray = [];\n\n// Iterate through the items and collect all the \"ccRecipients\"\nfor (const item of items) {\n  ccRecipientsArray.push(item.json.ccRecipients);\n}\n\n// Concatenate the \"ccRecipients\" into a comma-separated string\nconst ccRecipientsString = ccRecipientsArray.join(',');\n\n// Parse and format the \"createdDate\"\nconst createdDateObj = new Date(items[0].json.createdDate);\nconst createdDateFormatted = `${createdDateObj.getDate()} ${createdDateObj.toLocaleString('en-US', { month: 'short' })} ${createdDateObj.getFullYear()}`;\n\n// Construct the final object using the properties from the first item\nconst finalObject = {\n  ownedSnid: items[0].json.ownedSnid,\n  ccRecipients: ccRecipientsString,\n  issuedToName: items[0].json.issuedToName,\n  issuedToEmail: items[0].json.issuedToEmail,\n  createdDate: createdDateFormatted,\n  projectName: items[0].json.projectName,\n  nidLinks: items[0].json.nidLinks,\n  consultantName: items[0].json.consultantName,\n  consultantEmail: items[0].json.consultantEmail\n};\n\n// Return the final object as a single item\nreturn [\n  { json: finalObject }\n];\n"},"id":"8f2e71ee-bd73-496a-bddf-fd82a621a805","name":"Code6","type":"n8n-nodes-base.code","typeVersion":1,"position":[-280,1100]},{"parameters":{"jsCode":"// Initialize an array to store all the \"ccRecipients\"\nconst ccRecipientsArray = [];\n\n// Iterate through the items and collect all the \"ccRecipients\"\nfor (const item of items) {\n  ccRecipientsArray.push(item.json.ccRecipients);\n}\n\n// Concatenate the \"ccRecipients\" into a comma-separated string\nconst ccRecipientsString = ccRecipientsArray.join(',');\n\n// Parse and format the \"createdDate\"\nconst createdDateObj = new Date(items[0].json.createdDate);\nconst createdDateFormatted = `${createdDateObj.getDate()} ${createdDateObj.toLocaleString('en-US', { month: 'short' })} ${createdDateObj.getFullYear()}`;\n\n// Construct the final object using the properties from the first item\nconst finalObject = {\n  ownedSnid: items[0].json.ownedSnid,\n  ccRecipients: ccRecipientsString,\n  issuedToName: items[0].json.issuedToName,\n  issuedToEmail: items[0].json.issuedToEmail,\n  createdDate: createdDateFormatted,\n  projectName: items[0].json.projectName,\n  nidLinks: items[0].json.nidLinks,\n  consultantName: items[0].json.consultantName,\n  consultantEmail: items[0].json.consultantEmail\n};\n\n// Return the final object as a single item\nreturn [\n  { json: finalObject }\n];\n"},"id":"fc7e214a-6c59-4003-a8dd-1c51b1ecff5b","name":"Code7","type":"n8n-nodes-base.code","typeVersion":1,"position":[-100,1300]},{"parameters":{"subject":"=Cairnmead Safety Inspection {{ $json[\"ownedSnid\"] }}: SECOND Reminder: Pending Corrective Action Required","bodyContent":"=<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Email Acknowledgement</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.5;\n            margin: 20px;\n        }\n        a {\n            color: #007BFF;\n            text-decoration: none;\n        }\n    </style>\n</head>\n<body>\n    <p>Dear {{ $json[\"issuedToName\"] }},</p>\n    <p>We acknowledge the importance of ensuring the safety and well-being of everyone involved in the construction process, including workers and the surrounding community. Our initial assessment conducted on {{ $json[\"createdDate\"] }} for {{ $json[\"projectName\"] }} identified certain areas that required corrective measures to mitigate potential health risks. However, we have observed that the recommended actions have not been executed as anticipated, leading to an incomplete assessment report. Five days have lapsed without the close out being received.</p>\n    <p>To view the outstanding notices, click on this link:<br>\n    {{ $json[\"nidLinks\"] }}</p>\n    <p>Best Regards,</p>\n</body>\n</html>\n","toRecipients":"={{ $('Code5').first().json[\"issuedToEmail\"] }}","additionalFields":{"bodyContentType":"html","ccRecipients":"={{ $('Code5').first().json[\"ccRecipients\"] }}","from":"={{ $('Code5').first().json[\"consultantEmail\"] }}","saveToSentItems":false}},"id":"581a6dd8-6b6c-4798-a495-247243b59f49","name":"Microsoft Outlook1","type":"n8n-nodes-base.microsoftOutlook","typeVersion":1,"position":[-100,880],"credentials":{"microsoftOutlookOAuth2Api":{"id":"NJJeBueG4FfX6Tf4","name":"Cairnmead Outlook"}}},{"parameters":{"subject":"=Cairnmead Safety Inspection {{ $json[\"ownedSnid\"] }}: THIRD Reminder: Pending Corrective Action Required","bodyContent":"=<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Email Further Reminder</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.5;\n            margin: 20px;\n        }\n        a {\n            color: #007BFF;\n            text-decoration: none;\n        }\n    </style>\n</head>\n<body>\n    <p>Dear {{ $json[\"issuedToName\"] }},</p>\n    <p>We are writing to provide a further reminder regarding the pending corrective action for the Safety Inspection that was done on the {{ $json[\"createdDate\"] }} that needs to be completed for the {{ $json[\"projectName\"] }} construction project. As you are aware, this is the third reminder after 9 days without a close-out. It is crucial that we address these concerns promptly. By taking the necessary corrective action, we can ensure a safer environment and minimize any potential risk associated with the construction activities on your site.</p>\n    <p>To view the outstanding notices, click on this link:<br>\n    {{ $json[\"nidLinks\"] }}</p>\n    <p>Best Regards,</p>\n</body>\n</html>\n","toRecipients":"={{ $('Code6').first().json[\"issuedToEmail\"] }}","additionalFields":{"bodyContentType":"html","ccRecipients":"={{ $('Code6').first().json[\"ccRecipients\"] }}","from":"={{ $('Code6').first().json[\"consultantEmail\"] }}","saveToSentItems":false}},"id":"3cced9b6-8193-47d3-b00f-c52c1162416f","name":"Microsoft Outlook2","type":"n8n-nodes-base.microsoftOutlook","typeVersion":1,"position":[80,1080],"credentials":{"microsoftOutlookOAuth2Api":{"id":"NJJeBueG4FfX6Tf4","name":"Cairnmead Outlook"}}},{"parameters":{"subject":"={{ $json[\"ownedSnid\"] }}: Pending Corrective Action Required","bodyContent":"=<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Email Incomplete Report</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.5;\n            margin: 20px;\n        }\n        a {\n            color: #007BFF;\n            text-decoration: none;\n        }\n    </style>\n</head>\n<body>\n    <p>Dear {{ $json[\"issuedToName\"] }},</p>\n    <p>The recommended actions have not been executed as anticipated, leading to an incomplete assessment report.</p>\n    <p>To view the outstanding notices, click on this link:<br>\n    {{ $json[\"nidLinks\"] }}</p>\n    <p>Best Regards,</p>\n</body>\n</html>","toRecipients":"={{ $('Code7').first().json[\"issuedToEmail\"] }}","additionalFields":{"bodyContentType":"html","ccRecipients":"={{ $('Code7').first().json[\"ccRecipients\"] }}","from":"={{ $('Code7').first().json[\"consultantEmail\"] }}","saveToSentItems":false}},"id":"1a8d7d74-e9bc-4826-b6f3-91b2e7e5a73e","name":"Microsoft Outlook3","type":"n8n-nodes-base.microsoftOutlook","typeVersion":1,"position":[260,1280],"credentials":{"microsoftOutlookOAuth2Api":{"id":"NJJeBueG4FfX6Tf4","name":"Cairnmead Outlook"}}},{"parameters":{"conditions":{"number":[{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1773},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1342},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1162},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":227},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":370},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1346},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1674},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1268},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1338},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":871},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1755},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":567},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1457},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1435},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1726},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1450},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1739},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1467},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":721},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1697},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1391},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1398},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":642},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1272},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1336},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":598},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1121},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1147},{"value1":"={{ $('Code').item.json.projectId }}","operation":"equal","value2":1797}]},"combineOperation":"any"},"id":"262b5859-2ecb-4cab-8e30-ca196b042886","name":"IF","type":"n8n-nodes-base.if","typeVersion":1,"position":[-460,700]},{"parameters":{"conditions":{"number":[{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1773},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1342},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1162},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":227},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":370},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1346},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1674},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1268},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1338},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":871},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1755},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":567},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1457},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1435},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1726},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1450},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1739},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1467},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":721},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1697},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1391},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1398},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":642},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1272},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1336},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":598},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1121},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1147},{"value1":"={{ $('Code1').first().json.projectId }}","operation":"equal","value2":1797}]},"combineOperation":"any"},"id":"f94fc557-27a4-4738-a5d4-055cf333ae8e","name":"IF4","type":"n8n-nodes-base.if","typeVersion":1,"position":[-280,900]},{"parameters":{"conditions":{"number":[{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1773},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1342},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1162},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":227},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":370},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1346},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1674},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1268},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1338},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":871},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1755},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":567},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1457},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1435},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1726},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1450},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1739},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1467},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":721},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1697},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1391},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1398},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":642},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1272},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1336},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":598},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1121},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1147},{"value1":"={{ $('Code2').first().json.projectId }}","operation":"equal","value2":1797}]},"combineOperation":"any"},"id":"65ffd03c-4bfd-4b7a-8efd-30559cd9e351","name":"IF1","type":"n8n-nodes-base.if","typeVersion":1,"position":[-100,1100]},{"parameters":{"conditions":{"number":[{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1773},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1342},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1162},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":227},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":370},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1346},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1674},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1268},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1338},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":871},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1755},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":567},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1457},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1435},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1726},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1450},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1739},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1467},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":721},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1697},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1391},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1398},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":642},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1272},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1336},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":598},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1121},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1147},{"value1":"={{ $('Code3').first().json.projectId }}","operation":"equal","value2":1797}]},"combineOperation":"any"},"id":"b06aba4c-d702-41a5-b9d1-f261827f1264","name":"IF2","type":"n8n-nodes-base.if","typeVersion":1,"position":[80,1300]},{"parameters":{"rule":{"interval":[{"field":"cronExpression","expression":"00 06 * * *"}]}},"id":"03579f93-f2d8-4f15-9d99-ef25f1956d19","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.1,"position":[-1800,780]}],"connections":{"Get Data from MSSQL":{"main":[[{"node":"Check If 3 Days Old","type":"main","index":0}]]},"Check If 3 Days Old":{"main":[[{"node":"Code","type":"main","index":0}],[{"node":"Check If 5 Days Old","type":"main","index":0}]]},"Code":{"main":[[{"node":"Retrieve CC Recipients","type":"main","index":0}]]},"Check If 5 Days Old":{"main":[[{"node":"Code1","type":"main","index":0}],[{"node":"Check If 9 Days Old","type":"main","index":0}]]},"Check If 9 Days Old":{"main":[[{"node":"Code2","type":"main","index":0}],[{"node":"Check If > 10 Days Old","type":"main","index":0}]]},"Code3":{"main":[[{"node":"Microsoft SQL2","type":"main","index":0}]]},"Check If > 10 Days Old":{"main":[[{"node":"Code3","type":"main","index":0}]]},"Microsoft SQL":{"main":[[{"node":"Set1","type":"main","index":0}]]},"Microsoft SQL1":{"main":[[{"node":"Set2","type":"main","index":0}]]},"Microsoft SQL2":{"main":[[{"node":"Set3","type":"main","index":0}]]},"Retrieve CC Recipients":{"main":[[{"node":"Set","type":"main","index":0}]]},"Set":{"main":[[{"node":"Code4","type":"main","index":0}]]},"Code4":{"main":[[{"node":"IF","type":"main","index":0}]]},"Code2":{"main":[[{"node":"Microsoft SQL1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Microsoft SQL","type":"main","index":0}]]},"Set1":{"main":[[{"node":"Code5","type":"main","index":0}]]},"Set2":{"main":[[{"node":"Code6","type":"main","index":0}]]},"Set3":{"main":[[{"node":"Code7","type":"main","index":0}]]},"IF":{"main":[[{"node":"Microsoft Outlook","type":"main","index":0}]]},"Code5":{"main":[[{"node":"IF4","type":"main","index":0}]]},"Code6":{"main":[[{"node":"IF1","type":"main","index":0}]]},"Code7":{"main":[[{"node":"IF2","type":"main","index":0}]]},"IF4":{"main":[[{"node":"Microsoft Outlook1","type":"main","index":0}]]},"IF1":{"main":[[{"node":"Microsoft Outlook2","type":"main","index":0}]]},"IF2":{"main":[[{"node":"Microsoft Outlook3","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Get Data from MSSQL","type":"main","index":0}]]}},"settings":{},"staticData":{"node:Schedule Trigger":{"recurrencyRules":[]}},"pinData":{},"versionId":"793f492a-b8e0-4606-8b8d-d6ce5fb02278","triggerCount":1,"tags":[]}